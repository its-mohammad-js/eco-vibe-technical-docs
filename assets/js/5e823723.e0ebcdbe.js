"use strict";(self.webpackChunkeco_vibe_document=self.webpackChunkeco_vibe_document||[]).push([[804],{4293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"Layout Structure/App Layout","title":"App Layout","description":"Layout Overview","source":"@site/docs/Layout Structure/App Layout.md","sourceDirName":"Layout Structure","slug":"/Layout Structure/App Layout","permalink":"/eco-vibe-technical-docs/docs/Layout Structure/App Layout","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Layout Structure/App Layout.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"App Layout","permalink":"/eco-vibe-technical-docs/docs/category/app-layout"},"next":{"title":"Navbar Overview","permalink":"/eco-vibe-technical-docs/docs/Layout Structure/Navbar Overview"}}');var s=n(4848),a=n(8453);const r={sidebar_position:1},i=void 0,c={},u=[{value:"Layout Overview",id:"layout-overview",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"layout-overview",children:"Layout Overview"}),"\n",(0,s.jsxs)(t.p,{children:["The main responsibilities of the ",(0,s.jsx)(t.strong,{children:"App Layout"})," component are summarized in two key tasks:"]}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("strong",{children:"Conditional Rendering of Components Based on URL Path"})}),(0,s.jsx)("li",{children:(0,s.jsx)("strong",{children:"Adjusting the Overall Layout Size to Prevent Structural Issues Across Different Browsers"})})]}),"\n",(0,s.jsx)(t.p,{children:"For determining the rendering of the navbar, the page size is used as the criteria. In other cases, layout components are not rendered on certain routes. This is achieved using a simple state and effect. To adjust the page size for different screen sizes, a custom hook is employed."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'title="App Layout"',children:'function AppLayout({ children }) {\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n  const [allowed, setAllowed] = useState(true); // allow display navbar & footer state\n  const location = useLocation(); // location hook\n  const { appHeight } = useResizeListener();\n\n  // update allowing state on routes change\n  useEffect(() => {\n    const pathName = location.pathname\n      .split("/")\n      .map((name) => name.toLocaleLowerCase());\n\n    setAllowed(!pathName.includes("seller") && !pathName.includes("messages"));\n  }, [location]);\n\n  return (\n    <div\n      style={{\n        height: appHeight,\n      }}\n    >\n      {allowed && (\n        <div className="relative">\n          {isMobile ? <MobileNavbar /> : <DesktopNavbar />}\n        </div>\n      )}\n      {children}\n      {allowed && <Footer />}\n    </div>\n  );\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(6540);const s={},a=o.createContext(s);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);