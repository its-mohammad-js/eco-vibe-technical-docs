"use strict";(self.webpackChunkeco_vibe_document=self.webpackChunkeco_vibe_document||[]).push([[5237],{7726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"App & Routes/Lazy Loading & Protected Route","title":"Lazy Loading & Protected Route","description":"lazy load functionality","source":"@site/docs/App & Routes/Lazy Loading & Protected Route.md","sourceDirName":"App & Routes","slug":"/App & Routes/Lazy Loading & Protected Route","permalink":"/eco-vibe-technical-docs/docs/App & Routes/Lazy Loading & Protected Route","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/App & Routes/Lazy Loading & Protected Route.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Grouped Routes","permalink":"/eco-vibe-technical-docs/docs/App & Routes/Grouped Routes"},"next":{"title":"App Layout","permalink":"/eco-vibe-technical-docs/docs/category/app-layout"}}');var a=n(4848),s=n(8453);const r={sidebar_position:2},i=void 0,c={},d=[{value:"lazy load functionality",id:"lazy-load-functionality",level:2},{value:"Import Method:",id:"import-method",level:2},{value:"Wrap Child In Suspense component:",id:"wrap-child-in-suspense-component",level:4},{value:"Protected Route",id:"protected-route",level:2}];function u(e){const t={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"lazy-load-functionality",children:"lazy load functionality"}),"\n",(0,a.jsx)(t.p,{children:"In general, all the main routes of the application are imported using lazy loading and rendered within a simple Suspense component with a basic loading indicator. This approach improves the overall performance of the application, ensuring that the lazy loading process doesn't introduce unnecessary complexity or repetition in the code."}),"\n",(0,a.jsx)(t.h2,{id:"import-method",children:"Import Method:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:'title="Lazy import"',children:'const CustomerAuthPage = withSuspense(\n  lazy(() => import("../pages/Auth Pages/Customers/CustomerAuthPage"))\n);\n'})}),"\n",(0,a.jsx)(t.h4,{id:"wrap-child-in-suspense-component",children:"Wrap Child In Suspense component:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:'title="Suspense component"',children:'const withSuspense = (Component) => {\n  const WrappedComponent = (props) => (\n    <Suspense\n      fallback={\n        <div className="h-screen flex items-center justify-center">\n          <LoaderIcon className="size-20" />\n        </div>\n      }\n    >\n      <Component {...props} />\n    </Suspense>\n  );\n\n  // Set a displayName for easier debugging\n  WrappedComponent.displayName = `WithSuspense(${\n    Component.displayName || Component.name || "Component"\n  })`;\n\n  return WrappedComponent;\n};\n'})}),"\n",(0,a.jsx)(t.h2,{id:"protected-route",children:"Protected Route"}),"\n",(0,a.jsx)(t.p,{children:"To control the access level for each user type, two main indicators are used within the central state related to the user's data:"}),"\n",(0,a.jsx)(t.p,{children:"A. auth_status: The authentication status code of the user.\nB. loading: The state indicating whether the user data is still being loaded."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:'title="Protect Route"',children:'function ProtectedRoute() {\n  // necessary data & hooks\n  const { loading, userId, auth_status, error } = useSelector(\n    (state) => state.userData\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [failures, setFailures] = useState(0);\n\n  // reload page on fourth try\n  useEffect(() => {\n    if (failures >= 4) {\n      window.location.reload();\n    }\n\n    if (error && failures < 4) {\n      setFailures((prev) => prev + 1);\n    }\n  }, [error, loading]);\n\n  // navigate unauthorized users to sign-in page\n  useEffect(() => {\n    if (!loading && auth_status === 401) {\n      toast.error("You need to be logged in to access this page.");\n      navigate("/EcoVibe/");\n    }\n  }, [loading, auth_status]);\n\n  // dispaly error state on error case\n  if (!loading && error) return <>Error State</>;\n\n  // loading user data case\n  if (!userId && loading) return <>Loading Screen</>;\n  // render child component after loading\n  else if ((!loading && userId) || auth_status === 200) return <Outlet />;\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note:"})," The loading and error states have been omitted from the code above for better readability."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(6540);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);